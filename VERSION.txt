NOTE: All dates are in the format: dd.mm.yy

v1.9a (n/a)
tldr; Unreleased base version
[To be added soon]

v1.9a to v2.0a (n/a)
tldr; Revamped UI, Average Graph and Icon!
01- Changed the theme for matplotlib from ''fivethirtyeight'' to 'seaborn-darkgrid'.
02- Took all the Ping statistics out of one single, opaque legend and put each in its own text-box.
03- Text boxes are colour coded based on very simple logic:
   a. For Ping:
        - [RED] If the current ping, at any instance is less than 90% or more than 110% of the current average ping.
        - [GREEN] If within the above range.
        - [BLUE] For no change (if current ping and current avg has the same value). This should very rarely occur.
   b. For Average:
        - [RED] If the current ping is higher than current average, as this causes the average to go up.
        - [GREEN] If the current ping is lower than current average, as this causes the average to go down.
        - [BLUE] For no change (if current ping and current avg has the same value). This should very rarely occur.
04- Reposition the Radio Buttons for aesthetics.
05- Reposition and tuned the opacity of my signature on the interface.
06- Added CREATE_NO_WINDOW as a creationflag to subprocess to suppress generating a cmd window on slower machines.
    Faster machines did not show the windows because the process occurred too quickly.
07- Added an icon to display in window.
08- Added a 2nd graph line to represent average ping.

v2.0a to v2.1a (26.09.16)
tldr; Re-branding, UI improvements (Buttons!) and Stability!
01- Fixed bug where avg_lis and xar (ltimes) were of different lengths on "random" occasions.
02- Added conversion to numpy arrays to solidify error-proof-ness.
03- Revised and reduced the number of globals initialized and called within functions.
04- Many logic enhancements.
05- The addition of the Pause/Play button to pause progress of the Pinging.
06- The addition of the Quit button - no longer have to close the window.
07- Unified the placements of text data.
08- Changed name from 'LoLPing' to 'LeagueLatency' - as this is a much more unique name.
09- Updated the icon of the program to match the new name.
10- Updated and cleaned everything on Git.
11- Made the status text next to the pause/play button look seamless into the button itself.
12- Restructured parts of the code so that it makes more sense. (Addition to 04.)
13- Renamed the class 'Index' to 'button_handler', because that is essentially what it does.
14- Added alot comments! ("good enough" for now but, as always, to be continued!)
15- Added changelog from undocumented v1.9a.
16- Removed step v2.1b and merge as new v2.1a because old v2.1a has been lost due to rebranding and Git cleanup.

v2.1a to v2.1b (27.09.16)
tldr; More standard program structure, Changed default save directory for screenshots.
01- Moved icon.ico and pp_button.png to a static folder under which the subfolders define the type of static resource.
02- Screetshots will no longer save in the Windows user folder. It will instead now save in a dedicated folder named.
    'Screenshots' in the root directory of the script.
    N.B: All directories should be variable and therefore flexible thanks to the os library.
03- Renamed the 'button_handler' class to 'ButtonHandler' to respect the CamelCase convention.
04- Minor tweaks to function description comments and standardized it with the """ desc """ convention.
05- Renamed 'animate2' function to 'set_frame', as this better describes what the function does.
06- Removed global CREATE_NO_WINDOW for subprocess and added a suitable note in function description in upd_data.
    N.B: Only the global was removed - the value was just placed directly as the creationflag parameter for Popen.
07- Minor grammatical and punctual changes in VERSION.txt.
08- Added a few TODOs.
09- Cleaned the Git from 2.1a to reflect new folder structure of 2.1b.

v2.1b to v2.1c (28.09.16)
tldr; New error handling - Stability improvements
01- Fixed error where an IndexError was thrown:
    "line 157, in animate; ping_val = str(pings[-1])"
    This was due to upd_data not receiving a successful ping to the server, for many possible reasons.
    The solution implemented established a subprocess-ping error handler which expects a unreachable to timeout, then,
    creates a pop-up window to Retry or Cancel.
02- Changed the name of the subprocess from 'p1' to 'sp' to coincide with the error handler (spperr_handler)
03- Created a 'version' global variable to make it easier changing the version on updates.
04- Added some more TODOs.
05- Added minor comments to setup.py in Stable.

v2.1c to v2.2a (02.10.16)
tldr; More statistics and graphs! Better uniformity.
01- Made all text boxes of equal dimensions using a make_databox function.
02- Added tracking for the number of timeouts or unreachables have occurred.
03- Added a Retry message when a timeout error occurs.
04- Prioritized the TODOs.
05- Added IGN to README.
06- Added the latest screenshot to README.
07- Renamed all button variable names to 'xx_b' such as quit_b, pp_b etc.
08- Added red up and green down arrow to indicate ice/fall of data.
09- Added a ping summary circle which indicates concisely the state of your ping.
10- Added calculation of standard deviation and attached various calculations to it.
11- Based off #10, shows a range for 'stable' ping, where:
    - Upper bound is indicated by a thin, red graph.
    - Lower bound is indicated by a thing, light blue graph.
    - Range is indicated by a light green tinted area within the plot area.
12- Added enhanced ping logic (based off #10 and #11)
    - Has direct impact on drawing the databox for the ping readout.

v2.2a to v2.3a (08.01.17)
tldr; One uniform graph line! Logic fixes. Better use of colours. Better documentation.
01- Increased the opacity of the blue (previously green) area for ping expectancy.
    a. 'alpha' from 0.0375 to 0.05
02- Added better plotting functionality;
    a. This is accomplished by segmenting the line into green, yellow and red segments based on ping value
    b. Now the latency line appears as one, single and uniform line.
    c. The line's next segment changes colour based on the ping value at each instant
    d. This is done by segmenting the line it needs to draw in a logical way.
    e. This is contrast to overlapping lines that only connected the higher ping values.
    f. This eliminates the need for 'zorder'-ing the plots when overlapping; a bug that (accidentally) slipped in 2.2a
   NB: THIS SATISFIES TODO[HIGH]#6
       "Draw one continuous line for ping 'green' when ping < 200, 'yellow' when 200<=ping<=500, 'red' when ping>500"
03- Added coloured ping zones implemented through the new function draw_zones(), where;
    a. 0 <= ping <= 200                 -> green zone
    b. 200 <= ping <= 500               -> yellow zone
    c. 500 <= ping <= max_of_autoscale  -> red zone
    d. This fetches the auto limits set through matplotlib backend to maintain 'auto' ratio of the graph
04- Fixed the calculation of standard deviation for the ping statistics.
    a. sd was incorrect to varying degrees in 2.2a due to incorrect logic
    b. Implemented through built-in functionality of the numpy arrays (see 05 below)
05- Changed all arrays into numpy arrays and removed some now unnecessary arrays;
    a. Naming scheme changed:
       i. timear -> nptimes
      ii. pingar -> nppings
     iii. topar  -> nptop
      iv. botar  -> npbot
    b. 'Duplicate' arrays are also numpu arrays:
       i. nppings_na & nppings_lan which hold specific values of pings for "NA" and "LAN" respectively.
      ii. gpings, ypings & rpings are processed duplicates of nppings
06- Revised functions and classes, and standardized lengthy function descriptions;
    a. ButtonHandler; updated description
    b. draw_ping; updated description and logic revision
    c. make_databox RENAMED to make_textbox; updated description
    d. upd_data; updated description
07- Added and Revised many comments.
08- Added definitions to TODO priorities.
   NB: THIS SATISFIES TODO[LOW]#1
       "Add definition of the task ranks"